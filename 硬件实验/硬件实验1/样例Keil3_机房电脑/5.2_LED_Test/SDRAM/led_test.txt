; generated by ARM/Thumb C/C++ Compiler with , RVCT3.1 [Build 942] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o.\SDRAM\led_test.o --depend=.\SDRAM\led_test.d --device=DARMSS9 --apcs=interwork -O0 -I..\Common\Inc -I.\Include -IC:\Keil\ARM\INC\Samsung --omf_browse=.\SDRAM\led_test.crf Source\led_test.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  led_on PROC
;;;28     	int i,nOut;
;;;29     	nOut = 0xFF;
000000  e3a010ff          MOV      r1,#0xff
;;;30     
;;;31     	rCPLDLEDADDR = nOut & 0xFE;
000004  e20120fe          AND      r2,r1,#0xfe
000008  e59f322c          LDR      r3,|L1.572|
00000c  e5c32000          STRB     r2,[r3,#0]
;;;32     	for(i = 0; i < 100000; i++);
000010  e3a00000          MOV      r0,#0
000014  ea000000          B        |L1.28|
                  |L1.24|
000018  e2800001          ADD      r0,r0,#1
                  |L1.28|
00001c  e59f221c          LDR      r2,|L1.576|
000020  e1500002          CMP      r0,r2
000024  bafffffb          BLT      |L1.24|
;;;33     	rCPLDLEDADDR = nOut & 0xFC;  
000028  e20120fc          AND      r2,r1,#0xfc
00002c  e59f3208          LDR      r3,|L1.572|
000030  e5c32000          STRB     r2,[r3,#0]
;;;34     	for(i = 0; i < 100000; i++);	
000034  e3a00000          MOV      r0,#0
000038  ea000000          B        |L1.64|
                  |L1.60|
00003c  e2800001          ADD      r0,r0,#1
                  |L1.64|
000040  e59f21f8          LDR      r2,|L1.576|
000044  e1500002          CMP      r0,r2
000048  bafffffb          BLT      |L1.60|
;;;35     	rCPLDLEDADDR = nOut & 0xF8;   
00004c  e20120f8          AND      r2,r1,#0xf8
000050  e59f31e4          LDR      r3,|L1.572|
000054  e5c32000          STRB     r2,[r3,#0]
;;;36     	for(i = 0; i < 100000; i++);	
000058  e3a00000          MOV      r0,#0
00005c  ea000000          B        |L1.100|
                  |L1.96|
000060  e2800001          ADD      r0,r0,#1
                  |L1.100|
000064  e59f21d4          LDR      r2,|L1.576|
000068  e1500002          CMP      r0,r2
00006c  bafffffb          BLT      |L1.96|
;;;37     	rCPLDLEDADDR = nOut & 0xF0;  
000070  e20120f0          AND      r2,r1,#0xf0
000074  e59f31c0          LDR      r3,|L1.572|
000078  e5c32000          STRB     r2,[r3,#0]
;;;38     	for(i = 0; i < 100000; i++);
00007c  e3a00000          MOV      r0,#0
000080  ea000000          B        |L1.136|
                  |L1.132|
000084  e2800001          ADD      r0,r0,#1
                  |L1.136|
000088  e59f21b0          LDR      r2,|L1.576|
00008c  e1500002          CMP      r0,r2
000090  bafffffb          BLT      |L1.132|
;;;39     
;;;40     }
000094  e12fff1e          BX       lr
;;;41     
                          ENDP

                  led_off PROC
;;;52     	int i,nOut;	
;;;53     	nOut = 0xF0;	
000098  e3a010f0          MOV      r1,#0xf0
;;;54     	rCPLDLEDADDR = nOut | 0x01;
00009c  e3812001          ORR      r2,r1,#1
0000a0  e59f3194          LDR      r3,|L1.572|
0000a4  e5c32000          STRB     r2,[r3,#0]
;;;55     	for(i = 0; i < 100000; i++);	
0000a8  e3a00000          MOV      r0,#0
0000ac  ea000000          B        |L1.180|
                  |L1.176|
0000b0  e2800001          ADD      r0,r0,#1
                  |L1.180|
0000b4  e59f2184          LDR      r2,|L1.576|
0000b8  e1500002          CMP      r0,r2
0000bc  bafffffb          BLT      |L1.176|
;;;56     	rCPLDLEDADDR = nOut | 0x03; 
0000c0  e20120ff          AND      r2,r1,#0xff
0000c4  e3822003          ORR      r2,r2,#3
0000c8  e59f316c          LDR      r3,|L1.572|
0000cc  e5c32000          STRB     r2,[r3,#0]
;;;57     	for(i = 0; i < 100000; i++);	
0000d0  e3a00000          MOV      r0,#0
0000d4  ea000000          B        |L1.220|
                  |L1.216|
0000d8  e2800001          ADD      r0,r0,#1
                  |L1.220|
0000dc  e59f215c          LDR      r2,|L1.576|
0000e0  e1500002          CMP      r0,r2
0000e4  bafffffb          BLT      |L1.216|
;;;58     	rCPLDLEDADDR = nOut | 0x07; 
0000e8  e20120ff          AND      r2,r1,#0xff
0000ec  e3822007          ORR      r2,r2,#7
0000f0  e59f3144          LDR      r3,|L1.572|
0000f4  e5c32000          STRB     r2,[r3,#0]
;;;59     	for(i = 0; i < 100000; i++);	
0000f8  e3a00000          MOV      r0,#0
0000fc  ea000000          B        |L1.260|
                  |L1.256|
000100  e2800001          ADD      r0,r0,#1
                  |L1.260|
000104  e59f2134          LDR      r2,|L1.576|
000108  e1500002          CMP      r0,r2
00010c  bafffffb          BLT      |L1.256|
;;;60     	rCPLDLEDADDR = nOut | 0x0F; 
000110  e20120ff          AND      r2,r1,#0xff
000114  e382200f          ORR      r2,r2,#0xf
000118  e59f311c          LDR      r3,|L1.572|
00011c  e5c32000          STRB     r2,[r3,#0]
;;;61     	for(i = 0; i < 100000; i++);
000120  e3a00000          MOV      r0,#0
000124  ea000000          B        |L1.300|
                  |L1.296|
000128  e2800001          ADD      r0,r0,#1
                  |L1.300|
00012c  e59f210c          LDR      r2,|L1.576|
000130  e1500002          CMP      r0,r2
000134  bafffffb          BLT      |L1.296|
;;;62     }
000138  e12fff1e          BX       lr
;;;63     
                          ENDP

                  led_on_off PROC
;;;74     	int i;	
;;;75     	rCPLDLEDADDR = 0xF0;
00013c  e3a010f0          MOV      r1,#0xf0
000140  e59f20f4          LDR      r2,|L1.572|
000144  e5c21000          STRB     r1,[r2,#0]
;;;76     	for(i = 0; i < 100000; i++);
000148  e3a00000          MOV      r0,#0
00014c  ea000000          B        |L1.340|
                  |L1.336|
000150  e2800001          ADD      r0,r0,#1
                  |L1.340|
000154  e59f10e4          LDR      r1,|L1.576|
000158  e1500001          CMP      r0,r1
00015c  bafffffb          BLT      |L1.336|
;;;77     	rCPLDLEDADDR = 0xFF;
000160  e3a010ff          MOV      r1,#0xff
000164  e59f20d0          LDR      r2,|L1.572|
000168  e5c21000          STRB     r1,[r2,#0]
;;;78     	for(i = 0; i < 100000; i++);		
00016c  e3a00000          MOV      r0,#0
000170  ea000000          B        |L1.376|
                  |L1.372|
000174  e2800001          ADD      r0,r0,#1
                  |L1.376|
000178  e59f10c0          LDR      r1,|L1.576|
00017c  e1500001          CMP      r0,r1
000180  bafffffb          BLT      |L1.372|
;;;79     }
000184  e12fff1e          BX       lr
;;;80     
                          ENDP

                  heartbreath PROC
;;;86     void heartbreath(void)
;;;87     {
000188  e92d4010          PUSH     {r4,lr}
;;;88     	int i = 0;
00018c  e3a04000          MOV      r4,#0
;;;89     	while(1)
000190  ea00001a          B        |L1.512|
                  |L1.404|
;;;90     	{
;;;91     			rCPLDLEDADDR = 0xFE;
000194  e3a000fe          MOV      r0,#0xfe
000198  e59f109c          LDR      r1,|L1.572|
00019c  e5c10000          STRB     r0,[r1,#0]
;;;92     			delay(i);
0001a0  e1a00004          MOV      r0,r4
0001a4  ebfffffe          BL       delay
;;;93     			rCPLDLEDADDR = 0xFF;
0001a8  e3a000ff          MOV      r0,#0xff
0001ac  e59f1088          LDR      r1,|L1.572|
0001b0  e5c10000          STRB     r0,[r1,#0]
;;;94     			delay(100-i);
0001b4  e2640064          RSB      r0,r4,#0x64
0001b8  ebfffffe          BL       delay
;;;95     			if(led_flag == UP)
0001bc  e59f0080          LDR      r0,|L1.580|
0001c0  e5d00000          LDRB     r0,[r0,#0]  ; led_flag
0001c4  e3500000          CMP      r0,#0
0001c8  1a000001          BNE      |L1.468|
;;;96     			{
;;;97     				i++;
0001cc  e2844001          ADD      r4,r4,#1
0001d0  ea000000          B        |L1.472|
                  |L1.468|
;;;98     			}
;;;99     			else
;;;100    			{
;;;101    				i--;
0001d4  e2444001          SUB      r4,r4,#1
                  |L1.472|
;;;102    			}
;;;103    			if(i == 101)
0001d8  e3540065          CMP      r4,#0x65
0001dc  1a000002          BNE      |L1.492|
;;;104    			{
;;;105    				led_flag = DOWN;
0001e0  e3a00001          MOV      r0,#1
0001e4  e59f1058          LDR      r1,|L1.580|
0001e8  e5c10000          STRB     r0,[r1,#0]  ; led_flag
                  |L1.492|
;;;106    			}
;;;107    			if(i == -1)
0001ec  e3740001          CMN      r4,#1
0001f0  1a000002          BNE      |L1.512|
;;;108    			{
;;;109    				led_flag = UP;
0001f4  e3a00000          MOV      r0,#0
0001f8  e59f1044          LDR      r1,|L1.580|
0001fc  e5c10000          STRB     r0,[r1,#0]  ; led_flag
                  |L1.512|
000200  eaffffe3          B        |L1.404|
;;;110    			}
;;;111    		}
;;;112    }
;;;113    
                          ENDP

                  led_test PROC
;;;122    void led_test(void)
;;;123    {
000204  e92d4010          PUSH     {r4,lr}
;;;124    
;;;125    	uart_printf("\n Expand I/O (Diode Led) Test Example\n");
000208  e28f0038          ADR      r0,|L1.584|
00020c  ebfffffe          BL       uart_printf
;;;126    	uart_printf(" Please Look At The LEDS \n");
000210  e28f0058          ADR      r0,|L1.624|
000214  ebfffffe          BL       uart_printf
;;;127    
;;;128    	led_on();
000218  ebfffffe          BL       led_on
;;;129    	led_off();
00021c  ebfffffe          BL       led_off
;;;130    	led_on_off();
000220  ebfffffe          BL       led_on_off
;;;131    	delay(2000);
000224  e3a00e7d          MOV      r0,#0x7d0
000228  ebfffffe          BL       delay
;;;132    	uart_printf(" End.\n");
00022c  e28f0058          ADR      r0,|L1.652|
000230  ebfffffe          BL       uart_printf
;;;133    }
000234  e8bd4010          POP      {r4,lr}
000238  e12fff1e          BX       lr
                          ENDP

                  |L1.572|
00023c  21180000          DCD      0x21180000
                  |L1.576|
000240  000186a0          DCD      0x000186a0
                  |L1.580|
000244  00000000          DCD      led_flag
                  |L1.584|
000248  0a20457870616e6420492f4f202844696f6465204c6564292054657374204578616d706c650a00        DCB      "\n Expand I/O (Diode Led) Test Example\n",0
00026f  00                DCB      0
                  |L1.624|
000270  20506c65617365204c6f6f6b20417420546865204c454453200a00        DCB      " Please Look At The LEDS \n",0
00028b  00                DCB      0
                  |L1.652|
00028c  20456e642e0a00        DCB      " End.\n",0
000293  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=0

                  led_flag
000000  00                DCB      0x00
